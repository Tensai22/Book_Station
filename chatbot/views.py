from django.shortcuts import render
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
import json
from together import Together
from ui_app.models import Book

client = Together(api_key="0cc12ec3ffb314230e652f3811891f3b94f9695c69e95dd14c6ffb5d0d6b0c07")

# –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤, —É–∫–∞–∑—ã–≤–∞—é—â–∏—Ö –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∫–Ω–∏–≥–∞–º
BOOK_KEYWORDS = ['–∫–Ω–∏–≥–∞', '–∞–≤—Ç–æ—Ä', '–Ω–∞–∑–≤–∞–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ', '–∫–Ω–∏–≥–∏']


@csrf_exempt
def chat_view(request):
    if request.method == "POST":
        data = json.loads(request.body)
        user_message = data.get("message", "").strip()

        if not user_message:
            return JsonResponse({"error": "–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"}, status=400)

        # –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        books = Book.objects.filter(
            title__icontains=user_message
        ) | Book.objects.filter(
            author__icontains=user_message
        ) | Book.objects.filter(
            description__icontains=user_message
        )

        if books.exists():
            recommendations = "\n".join([f"üìñ {book.title} ‚Äî {book.author}" for book in books[:5]])
            reply = f"–í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n{recommendations}"
        else:
            # AI-–æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –∫–Ω–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            response = client.chat.completions.create(
                model="deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free",
                messages=[{"role": "user", "content": user_message}]
            )
            reply = response.choices[0].message.content

        return JsonResponse({"response": reply})

    return JsonResponse({"error": "–¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã"}, status=405)


def chatbot_page(request):
    return render(request, "chatbot/chat.html")
